name: Build and push Docker images to GitHub Container Registry

on:
    push:
        tags: ["v*.*.*"]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Load environment variables from .env file
              run: |
                set -o allexport
                source .env
                set +o allexport
            - run: |
                echo ${{ env.PHP_IMAGE_VERSION }}
            # - name: Test
            #   run: |
            #     echo $PHP_IMAGE_VERSION
            #     echo ${{ env.PHP_IMAGE_VERSIONN }}
            #     echo ${{ secrets.PHP_IMAGE_VERSIONN }}
    # php-image:
    #     name: Build and push php image
    #     runs-on: ubuntu-latest
    #     permissions:
    #         contents: read
    #         packages: write
    #         id-token: write
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v3
    #         - name: Set env
    #           run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    #         # - name: Test
    #         #   run: |
    #         #     echo $RELEASE_VERSION
    #         #     echo ${{ env.RELEASE_VERSION }}

    #         - name: Set up Docker Buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Log into registry
    #           uses: docker/login-action@v2
    #           with:
    #               registry: ${{ env.REGISTRY }}
    #               username: ${{ github.actor }}
    #               password: ${{ secrets.GITHUB_TOKEN }}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #               context: ./docker/prod/php
    #               push: true
    #               tags:
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-php:latest
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-php:${{ env.RELEASE_VERSION }}
    #               cache-from: type=gha
    #               cache-to: type=gha,mode=max
    #               build-args:
    #                 PHP_VERSION=${PHP_IMAGE_VERSION}

    # nginx-image:
    #     name: Build and push nginx image
    #     runs-on: ubuntu-latest
    #     permissions:
    #         contents: read
    #         packages: write
    #         id-token: write
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v3
    #         - name: Set env
    #           run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    #         # - name: Test
    #         #   run: |
    #         #     echo $RELEASE_VERSION
    #         #     echo ${{ env.RELEASE_VERSION }}

    #         - name: Set up Docker Buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Log into registry
    #           uses: docker/login-action@v2
    #           with:
    #               registry: ${{ env.REGISTRY }}
    #               username: ${{ github.actor }}
    #               password: ${{ secrets.GITHUB_TOKEN }}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #               context: ./docker/prod/nginx
    #               push: true
    #               tags:
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-nginx:latest
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-nginx:${{ env.RELEASE_VERSION }}
    #               cache-from: type=gha
    #               cache-to: type=gha,mode=max
    #               build-args:
    #                 NGINX_VERSION=${NGINX_IMAGE_VERSION}
    #                 PHP_UPSTREAM_CONTAINER=php
    #                 PHP_UPSTREAM_PORT=${PHP_PORT}

    # database-image:
    #     name: Build and push database image
    #     runs-on: ubuntu-latest
    #     permissions:
    #         contents: read
    #         packages: write
    #         id-token: write
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v3
    #         - name: Set env
    #           run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    #         # - name: Test
    #         #   run: |
    #         #     echo $RELEASE_VERSION
    #         #     echo ${{ env.RELEASE_VERSION }}

    #         - name: Set up Docker Buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Log into registry
    #           uses: docker/login-action@v2
    #           with:
    #               registry: ${{ env.REGISTRY }}
    #               username: ${{ github.actor }}
    #               password: ${{ secrets.GITHUB_TOKEN }}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #               context: ./docker/prod/database
    #               push: true
    #               tags:
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-database:latest
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-database:${{ env.RELEASE_VERSION }}
    #               cache-from: type=gha
    #               cache-to: type=gha,mode=max
    #               build-args:
    #                 POSTGRES_VERSION=${DATABASE_IMAGE_VERSION}

    # mailer-image:
    #     name: Build and push mailer image
    #     runs-on: ubuntu-latest
    #     permissions:
    #         contents: read
    #         packages: write
    #         id-token: write
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v3
    #         - name: Set env
    #           run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    #         # - name: Test
    #         #   run: |
    #         #     echo $RELEASE_VERSION
    #         #     echo ${{ env.RELEASE_VERSION }}

    #         - name: Set up Docker Buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Log into registry
    #           uses: docker/login-action@v2
    #           with:
    #               registry: ${{ env.REGISTRY }}
    #               username: ${{ github.actor }}
    #               password: ${{ secrets.GITHUB_TOKEN }}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #               context: ./docker/prod/mailer
    #               push: true
    #               tags:
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-mailer:latest
    #                 ghcr.io/rbrauner/learning-symfony-guestbook-mailer:${{ env.RELEASE_VERSION }}
    #               cache-from: type=gha
    #               cache-to: type=gha,mode=max
    #               build-args:
    #                 MAILER_VERSION=${MAILER_IMAGE_VERSION}
